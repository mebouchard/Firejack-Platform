#
# Firejack Open Flame - Copyright (c) 2011 Firejack Technologies
#
# This source code is the product of the Firejack Technologies
# Core Technologies Team (Benjamin A. Miller, Oleg Marshalenko, and Timur
# Asanov) and licensed only under valid, executed license agreements
# between Firejack Technologies and its customers. Modification and / or
# re-distribution of this source code is allowed only within the terms
# of an executed license agreement.
#
# Any modification of this code voids any and all warranties and indemnifications
# for the component in question and may interfere with upgrade path. Firejack Technologies
# encourages you to extend the core framework and / or request modifications. You may
# also submit and assign contributions to Firejack Technologies for consideration
# as improvements or inclusions to the platform to restore modification
# warranties and indemnifications upon official re-distributed in patch or release form.
#

object.not.found=Object not found.

delete.success=\''{0}\'' has deleted successfully.
delete.failure=\''{0}\'' has not deleted.
delete.failure.has.child=Can''t delete \''{0}\'' because one has child nodes.
delete.server.error=Can''t delete \''{0}\''. Server error.

#save.failure.lookup.not.unique=Can''t save \''{0}\'' because lookup \''{1}\'' is not unique.
save.failure.lookup.not.unique=An entity with this name or lookup already exists.
save.server.error=Can''t save \''{0}\''. Server error.
package.could.be.found=Package with id \''{0}\'' was not found.

server.error=Server error: \''{0}\''.

### FieldType Enum ###
net.firejack.platform.api.registry.model.FieldType.UNIQUE_ID.name=Unique ID
net.firejack.platform.api.registry.model.FieldType.UNIQUE_ID.description=A special unique identifier for an ENTITY guaranteed to be unique across all kinds of ENTITIES.
net.firejack.platform.api.registry.model.FieldType.NUMERIC_ID.name=Numeric ID
net.firejack.platform.api.registry.model.FieldType.NUMERIC_ID.description=A simple numeric identifier for an ENTITY relative to the type of ENTITY. Many ENTITIES of different types may share the same id value.
net.firejack.platform.api.registry.model.FieldType.CODE.name=Code
net.firejack.platform.api.registry.model.FieldType.CODE.description=A short text-based code in all capitals meant to briefly describe the object.
net.firejack.platform.api.registry.model.FieldType.LABEL.name=Label
net.firejack.platform.api.registry.model.FieldType.LABEL.description=A medium length textual identifier for an entity meant for display purposes.
net.firejack.platform.api.registry.model.FieldType.LOOKUP.name=Lookup
net.firejack.platform.api.registry.model.FieldType.LOOKUP.description=A long string that must be all lower-case designed for detailed unique lookups.
net.firejack.platform.api.registry.model.FieldType.NAME.name=Name
net.firejack.platform.api.registry.model.FieldType.NAME.description=A short, readable name for an object meant to represent
net.firejack.platform.api.registry.model.FieldType.DESCRIPTION.name=Description
net.firejack.platform.api.registry.model.FieldType.DESCRIPTION.description=A medium length descriptive text field intended to describe to purpose of a given ENTITY.
net.firejack.platform.api.registry.model.FieldType.PASSWORD.name=Password
net.firejack.platform.api.registry.model.FieldType.PASSWORD.description=An encrypted password or key up to 32 characters long.
net.firejack.platform.api.registry.model.FieldType.SECRET_KEY.name=Secret Key
net.firejack.platform.api.registry.model.FieldType.SECRET_KEY.description=An encrypted key up to 1024 characters long.
net.firejack.platform.api.registry.model.FieldType.TINY_TEXT.name=Tiny Text
net.firejack.platform.api.registry.model.FieldType.TINY_TEXT.description=Tiny text up to 64 characters long.
net.firejack.platform.api.registry.model.FieldType.SHORT_TEXT.name=Short Text
net.firejack.platform.api.registry.model.FieldType.SHORT_TEXT.description=Short text up to 255 characters long.
net.firejack.platform.api.registry.model.FieldType.MEDIUM_TEXT.name=Medium Text
net.firejack.platform.api.registry.model.FieldType.MEDIUM_TEXT.description=A medium length text field that can house up to 2 pages of text (or 65000 characters).
net.firejack.platform.api.registry.model.FieldType.LONG_TEXT.name=Long Text
net.firejack.platform.api.registry.model.FieldType.LONG_TEXT.description=A generic text value of to 4096 characters long.
net.firejack.platform.api.registry.model.FieldType.UNLIMITED_TEXT.name=Unlimited Text
net.firejack.platform.api.registry.model.FieldType.UNLIMITED_TEXT.description=An unlimited length text value perfect for long text-based content.
net.firejack.platform.api.registry.model.FieldType.RICH_TEXT.name=Rich Text
net.firejack.platform.api.registry.model.FieldType.RICH_TEXT.description=An unlimited length formatted text value that may include HTML and style information.
net.firejack.platform.api.registry.model.FieldType.URL.name=URL
net.firejack.platform.api.registry.model.FieldType.URL.description=The URL to a web page or other web resource.
net.firejack.platform.api.registry.model.FieldType.FILE.name=File
net.firejack.platform.api.registry.model.FieldType.FILE.description=A generic file field stored along with an ENTITY. The actual file is stored in the Open Flame Content File Store.
net.firejack.platform.api.registry.model.FieldType.IMAGE_FILE.name=Image File
net.firejack.platform.api.registry.model.FieldType.IMAGE_FILE.description=An image file stored along with the ENTITY. The actual file content is stored in the Open Flame Content File Store.
net.firejack.platform.api.registry.model.FieldType.AUDIO_FILE.name=Audio File
net.firejack.platform.api.registry.model.FieldType.AUDIO_FILE.description=An audio file stored along with the ENTITY. The actual file content is stored in the Open Flame Content File Store.
net.firejack.platform.api.registry.model.FieldType.VIDEO_FILE.name=Video File
net.firejack.platform.api.registry.model.FieldType.VIDEO_FILE.description=A video file stored along with the ENTITY. The actual file content is stored in the Open Flame Content File Store.
net.firejack.platform.api.registry.model.FieldType.DATE.name=Date
net.firejack.platform.api.registry.model.FieldType.DATE.description=A calendar date representing a specific day of a specific year. These objects assume a day begins at midnight.
net.firejack.platform.api.registry.model.FieldType.TIME.name=Time
net.firejack.platform.api.registry.model.FieldType.TIME.description=A specific time of day down to the second without regard to the specific calendar day.
net.firejack.platform.api.registry.model.FieldType.EVENT_TIME.name=Event Time
net.firejack.platform.api.registry.model.FieldType.EVENT_TIME.description=A specific calendar date and time at any desired precision (hours, minutes, seconds, or milliseconds).
net.firejack.platform.api.registry.model.FieldType.CREATION_TIME.name=Creation Time
net.firejack.platform.api.registry.model.FieldType.CREATION_TIME.description=An automatic event time that is set when an ENTITY is first created.
net.firejack.platform.api.registry.model.FieldType.UPDATE_TIME.name=Update Time
net.firejack.platform.api.registry.model.FieldType.UPDATE_TIME.description=An automatic event time that changes every time an ENTITY is updated.
net.firejack.platform.api.registry.model.FieldType.INTEGER_NUMBER.name=Integer Number
net.firejack.platform.api.registry.model.FieldType.INTEGER_NUMBER.description=A simple integer numeric value.
net.firejack.platform.api.registry.model.FieldType.LARGE_NUMBER.name=Long Number
net.firejack.platform.api.registry.model.FieldType.LARGE_NUMBER.description=A long integer numeric value.
net.firejack.platform.api.registry.model.FieldType.DECIMAL_NUMBER.name=Decimal Number
net.firejack.platform.api.registry.model.FieldType.DECIMAL_NUMBER.description=A simple decimal numeric value with up to 4 decimal places and 10 total digits.
net.firejack.platform.api.registry.model.FieldType.CURRENCY.name=Currency
net.firejack.platform.api.registry.model.FieldType.CURRENCY.description=Money in a specific currency. These values store both the amount and the type of currency.
net.firejack.platform.api.registry.model.FieldType.PHONE_NUMBER.name=Phone Number
net.firejack.platform.api.registry.model.FieldType.PHONE_NUMBER.description=An internationally capably phone number complete with country code and all other numbers required to dial the phone number from anywhere.
net.firejack.platform.api.registry.model.FieldType.SSN.name=SSN
net.firejack.platform.api.registry.model.FieldType.SSN.description=A standard US social security number
net.firejack.platform.api.registry.model.FieldType.FLAG.name=Flag
net.firejack.platform.api.registry.model.FieldType.FLAG.description=A true / false value.
net.firejack.platform.api.registry.model.FieldType.OBJECT.name=Entity
net.firejack.platform.api.registry.model.FieldType.OBJECT.description=An embedded ENTITY defined separately in Open Flame. The ENTITY type is required for this field type. Entity fields are used to build more complex data structures for views and other messages.
net.firejack.platform.api.registry.model.FieldType.BLOB.name=Blob
net.firejack.platform.api.registry.model.FieldType.BLOB.description=Blog columns.
net.firejack.platform.api.registry.model.FieldType.LIST.name=List
net.firejack.platform.api.registry.model.FieldType.LIST.description=A List of embedded ENTITIES defined separately in Open Flame. The ENTITY type is required for this field type.
net.firejack.platform.api.registry.model.FieldType.MAP.name=Map
net.firejack.platform.api.registry.model.FieldType.MAP.description=A Map of embedded ENTITIES defined separately in Open Flame. The ENTITY type is required for this field type.

net.firejack.platform.api.registry.model.FieldType.Boolean.class=Boolean
net.firejack.platform.api.registry.model.FieldType.Integer.class=Number
net.firejack.platform.api.registry.model.FieldType.Long.class=Number
net.firejack.platform.api.registry.model.FieldType.Double.class=Number
net.firejack.platform.api.registry.model.FieldType.String.class=Text
net.firejack.platform.api.registry.model.FieldType.Date.class=Date
net.firejack.platform.api.registry.model.FieldType.Object.class=Object
net.firejack.platform.api.registry.model.FieldType.List.class=Collection
net.firejack.platform.api.registry.model.FieldType.Map.class=Collection

net.firejack.platform.api.registry.model.RelationshipType.TREE.name=Tree
net.firejack.platform.api.registry.model.RelationshipType.TREE.description=Tree relationships allow a single type of entity to relate to itself in a tree. This will add a parent id to the object so they may be nested. This relationship is useful for taxonomies or folder structures.
net.firejack.platform.api.registry.model.RelationshipType.PARENT_CHILD.name=Parent Child
net.firejack.platform.api.registry.model.RelationshipType.PARENT_CHILD.description=The target is a child of the source and cannot exist without a parent. On creation, the parent must always be specified for the target object.
net.firejack.platform.api.registry.model.RelationshipType.ASSOCIATION.name=Association
net.firejack.platform.api.registry.model.RelationshipType.ASSOCIATION.description=The source is related to zero or more of the target objects, as needed. These relationships are optional on source object creation.
net.firejack.platform.api.registry.model.RelationshipType.WEIGHTED_ASSOCIATION.name=Weighted Association
net.firejack.platform.api.registry.model.RelationshipType.WEIGHTED_ASSOCIATION.description=The source is related to zero or more of the target objects, as needed with an associated weight from 1 - 100 which indicates how strong the relationship is. These relationships are optional on source object creation.
net.firejack.platform.api.registry.model.RelationshipType.HIERARCHY.name=Hierarchy
net.firejack.platform.api.registry.model.RelationshipType.HIERARCHY.description=This relationship is no longer supported. Please use tree or parent-child instead.
net.firejack.platform.api.registry.model.RelationshipType.TYPE.name=Type
net.firejack.platform.api.registry.model.RelationshipType.TYPE.description=The target helps describe the source object and classify it in some way. Selecting a type is required when creating each source object.
net.firejack.platform.api.registry.model.RelationshipType.LINK.name=Link
net.firejack.platform.api.registry.model.RelationshipType.LINK.description=The two objects are linked and the relationship is not required. The source entity will have an optional link to the target entity.
