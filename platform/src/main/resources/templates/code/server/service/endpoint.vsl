package ${package};

import java.util.*;
import net.firejack.platform.core.request.ServiceRequest;
import net.firejack.platform.core.response.ServiceResponse;
import org.springframework.stereotype.Component;
#foreach($import in $imports)
import ${import.fullName};
#end

import javax.ws.rs.*;
import javax.ws.rs.core.MediaType;

/**
 * Created by Open Flame Platform
 * Date: $date
 */

$!{description}
@Component("${fullName}")
@Path("$render.convertPath($classPath, $serviceName)")
public class ${name} implements ${webService.name} {

#foreach( $method  in $local.methods)
	$!{method.description}
	@${method.broker.httpMethod}
	@Path("$!{render.renderEndpointPath($method)}")
	@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
#if($method.broker.httpMethod == "PUT" || $method.broker.httpMethod == "POST")
	@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
#end
	public ServiceResponse<${method.broker.response.domain.name}> ${method.name}($!{render.renderEndpointParams($method.params)}) {
		return ${api}.${local.service.name}.${method.name}($!{render.renderEndpointArguments($method.params)});
	}
#end
}
