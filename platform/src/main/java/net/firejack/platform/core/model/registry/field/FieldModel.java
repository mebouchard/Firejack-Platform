/*
 * Firejack Open Flame - Copyright (c) 2011 Firejack Technologies
 *
 * This source code is the product of the Firejack Technologies
 * Core Technologies Team (Benjamin A. Miller, Oleg Marshalenko, and Timur
 * Asanov) and licensed only under valid, executed license agreements
 * between Firejack Technologies and its customers. Modification and / or
 * re-distribution of this source code is allowed only within the terms
 * of an executed license agreement.
 *
 * Any modification of this code voids any and all warranties and indemnifications
 * for the component in question and may interfere with upgrade path. Firejack Technologies
 * encourages you to extend the core framework and / or request modifications. You may
 * also submit and assign contributions to Firejack Technologies for consideration
 * as improvements or inclusions to the platform to restore modification
 * warranties and indemnifications upon official re-distributed in patch or release form.
 */

package net.firejack.platform.core.model.registry.field;

import net.firejack.platform.api.registry.model.FieldType;
import net.firejack.platform.core.annotation.Lookup;
import net.firejack.platform.core.model.registry.*;
import net.firejack.platform.core.model.registry.domain.EntityModel;
import net.firejack.platform.core.utils.IHasName;
import org.hibernate.annotations.Type;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlTransient;
import java.util.List;

@Entity
@XmlTransient
@Lookup(parent = RegistryNodeModel.class)
@Table(name = "opf_registry_node_field")
public class FieldModel extends LookupModel<FieldContainerRegistryNode> implements IHasName, IAllowCreateAutoDescription {

    private static final long serialVersionUID = -6987791819640092124L;
    //- node-id (the id of the entity) (fk)
//    private RegistryNode registryNode;

    //- type (short-text, medium-text, long-text, etc) (an enum)
    private FieldType fieldType;

    private String customFieldType;

    //- required (true or false)
    private Boolean required;

    private Boolean searchable;

    private Boolean autoGenerated = false;

    private String displayName;

	private String displayDescription;

    private String defaultValue;

    private AllowedFieldValueList allowedFieldValueList;

    private List<EntityModel> options;

	public FieldModel() {
	}

	public FieldModel(Long id) {
		super(id);
	}

	/**
     * @return
     */
    @Enumerated(EnumType.STRING)
    @Column(name = "field_type")
    public FieldType getFieldType() {
        return fieldType;
    }

    /**
     * @param fieldType
     */
    public void setFieldType(FieldType fieldType) {
        this.fieldType = fieldType;
    }

    /**
     * @return
     */
    @Column(name = "custom_field_type", length = 1023)
    public String getCustomFieldType() {
        return customFieldType;
    }

    /**
     * @param customFieldType
     */
    public void setCustomFieldType(String customFieldType) {
        this.customFieldType = customFieldType;
    }

    /**
     * @return
     */
    @Column(name = "required")
    public Boolean getRequired() {
        return required;
    }

    /**
     * @param required
     */
    public void setRequired(Boolean required) {
        this.required = required;
    }

	@Column(name = "searchable")
	public Boolean getSearchable() {
		return searchable;
	}

	public void setSearchable(Boolean searchable) {
		this.searchable = searchable;
	}

	/**
     * @return
     */
    public Boolean getAutoGenerated() {
        return autoGenerated;
    }

    /**
     * @param autoGenerated
     */
    public void setAutoGenerated(Boolean autoGenerated) {
        this.autoGenerated = autoGenerated;
    }

	@Column(length = 64)
	public String getDisplayName() {
		return displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	@Column(length = 255)
	public String getDisplayDescription() {
		return displayDescription;
	}

	public void setDisplayDescription(String displayDescription) {
		this.displayDescription = displayDescription;
	}

	/**
     * @return
     */
    @Column(length = 255)
    public String getDefaultValue() {
        return defaultValue;
    }

    /**
     * @param defaultValue
     */
    public void setDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
    }

    /**
     * @return
     */
    @Type(type = "net.firejack.platform.core.utils.type.AllowedFieldValuesListUserType")
    @Column(name = "allowed_values", length = 2048)
    public AllowedFieldValueList getAllowedFieldValueList() {
        return allowedFieldValueList;
    }

    /**
     * @param allowedFieldValueList
     */
    public void setAllowedFieldValueList(AllowedFieldValueList allowedFieldValueList) {
        this.allowedFieldValueList = allowedFieldValueList;
    }

    @ManyToMany
    @JoinTable(name = "opf_registry_node_field_options",
            joinColumns = @JoinColumn(name = "id_field", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "id_entity", referencedColumnName = "id")
    )
    public List<EntityModel> getOptions() {
        return options;
    }

    public void setOptions(List<EntityModel> options) {
        this.options = options;
    }

    @Override
    @Transient
    public RegistryNodeType getType() {
        return RegistryNodeType.FIELD;
    }

}
