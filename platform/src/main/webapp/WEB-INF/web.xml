<!--
  ~ Firejack Platform - Copyright (c) 2011 Firejack Technologies
  ~
  ~ This source code is the product of the Firejack Technologies
  ~ Core Technologies Team (Benjamin A. Miller, Oleg Marshalenko, and Timur
  ~ Asanov) and licensed only under valid, executed license agreements
  ~ between Firejack Technologies and its customers. Modification and / or
  ~ re-distribution of this source code is allowed only within the terms
  ~ of an executed license agreement.
  ~
  ~ Any modification of this code voids any and all warranties and indemnifications
  ~ for the component in question and may interfere with upgrade path. Firejack Technologies
  ~ encourages you to extend the core framework and / or request modifications. You may
  ~ also submit and assign contributions to Firejack Technologies for consideration
  ~ as improvements or inclusions to the platform to restore modification
  ~ warranties and indemnifications upon official re-distributed in patch or release form.
  -->

<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>Firejack Console Web Application</display-name>

    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <!--Uncomment following declaration to use spring security extension instead of Standalone Security Filter-->
    <!--<filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>springSecurityFilterChain</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->

    <!--<filter-mapping>-->
        <!--<filter-name>springSecurityFilterChain</filter-name>-->
        <!--<servlet-name>Spring MVC Dispatcher Servlet</servlet-name>-->
        <!--<dispatcher>FORWARD</dispatcher>-->
        <!--<dispatcher>REQUEST</dispatcher>-->
    <!--</filter-mapping>-->

    <!-- OpenFlame Security Filter Configuration-->
    <filter>
        <filter-name>opfSecurityFilter</filter-name>
        <filter-class>net.firejack.platform.web.security.extension.filter.ConsoleSecurityFilter</filter-class>
        <init-param>
            <param-name>sign-in-handler-url</param-name>
            <param-value>/authentication</param-value>
        </init-param>
        <init-param>
            <param-name>reset-password-handler-url</param-name>
            <param-value>/reset-password</param-value>
        </init-param>
        <init-param>
            <param-name>sign-out-handler-url</param-name>
            <param-value>/console/logout</param-value>
        </init-param>
        <init-param>
            <param-name>openid-sign-in-handler-url</param-name>
            <param-value>/openid-authentication</param-value>
        </init-param>
        <init-param>
            <param-name>openid-parameter</param-name>
            <param-value>openid_identifier</param-value>
        </init-param>
        <init-param>
            <param-name>facebook-sign-in-handler-url</param-name>
            <param-value>/facebook-authentication</param-value>
        </init-param>
        <init-param>
            <param-name>twitter-sign-in-handler-url</param-name>
            <param-value>/twitter-authentication</param-value>
        </init-param>
        <init-param>
            <param-name>linkedin-sign-in-handler-url</param-name>
            <param-value>/linkedin-authentication</param-value>
        </init-param>
        <init-param>
            <param-name>username-form-parameter</param-name>
            <param-value>login</param-value>
        </init-param>
        <init-param>
            <param-name>password-form-parameter</param-name>
            <param-value>password</param-value>
        </init-param>
        <init-param>
            <param-name>email-form-parameter</param-name>
            <param-value>email</param-value>
        </init-param>
        <init-param>
            <param-name>encrypted-form-parameter</param-name>
            <param-value>encrypted</param-value>
        </init-param>
        <init-param>
            <param-name>sign-in-page-url</param-name>
            <param-value>/home</param-value>
        </init-param>
         <init-param>
            <param-name>default-page</param-name>
            <param-value>/console/domain</param-value>
        </init-param>
        <init-param>
            <param-name>access-denied-page</param-name>
            <param-value>/console/access-denied</param-value>
        </init-param>
        <init-param>
            <param-name>protocol-prefixes</param-name>
            <param-value>
                <![CDATA[<protocol-mappings>
                    <protocol name="HTTP" prefix="/console"/>
                    <protocol name="HTTP" prefix="/rest"/>
                    <protocol name="SOAP" prefix="/ws"/>
                </protocol-mappings>]]>
            </param-value>
        </init-param>
        <init-param>
            <param-name>authenticator-bean</param-name>
            <!--<param-value>compositeOpenFlameAuthenticator</param-value>-->
            <param-value>directoryListAuthenticator</param-value>
        </init-param>
        <init-param>
            <param-name>permission-container-factory-bean</param-name>
            <param-value>permissionContainerFactory</param-value>
        </init-param>
        <init-param>
            <param-name>action-container-factory-bean</param-name>
            <param-value>consoleActionContainerFactory</param-value>
        </init-param>
        <init-param>
            <param-name>masked-resource-container-factory-bean</param-name>
            <param-value>maskedResourceContainerFactory</param-value>
        </init-param>
        <init-param>
            <param-name>openid-processor-bean</param-name>
            <param-value>openIDProcessor</param-value>
        </init-param>
        <init-param><!-- to disable oauth-provider support, comment this parameter declaration -->
            <param-name>oauth-provider-supported</param-name>
            <param-value>supported</param-value>
        </init-param>
        <init-param>
            <param-name>oauth-provider-authorize-page</param-name>
            <param-value>/oauth_authorize.jsp</param-value>
        </init-param>
        <init-param>
            <param-name>nav-element-container-factory-bean</param-name>
            <param-value>navElementContainerFactory</param-value>
        </init-param>
        <init-param>
            <param-name>installation-url</param-name>
            <param-value>/installation</param-value>
        </init-param>
        <!--<init-param>-->
            <!--<param-name>initialization-url</param-name>-->
            <!--<param-value>/init</param-value>-->
        <!--</init-param>-->
        <init-param>
            <param-name>package-lookup</param-name>
            <param-value>net.firejack.platform</param-value>
        </init-param>
        <init-param>
            <param-name>debug-mode</param-name>
            <param-value>${debug.mode}</param-value>
        </init-param>
    </filter>
    <filter-mapping>
		<filter-name>opfSecurityFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <filter>
        <filter-name>urlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>urlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/spring/app-config.xml
        </param-value>
    </context-param>

    <listener>
        <listener-class>net.firejack.platform.web.listener.InitContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
        <servlet-class>net.firejack.platform.servlet.SingleDispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
        <url-pattern>/app/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>Jersey Spring Web Application</servlet-name>
        <servlet-class>net.firejack.platform.servlet.SingleSpringServlet</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>
                net.firejack.platform.web.resource
                net.firejack.platform.core.provider
                net.firejack.platform.provider
                org.codehaus.jackson.jaxrs
            </param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey Spring Web Application</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>4</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/ws/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!--<error-page>
        <error-code>404</error-code>
        <location>/error/page-not-found</location>
    </error-page>-->

</web-app>
