//@tag opf-model
/*
 * Firejack Platform - Copyright (c) 2012 Firejack Technologies
 *
 * This source code is the product of the Firejack Technologies
 * Core Technologies Team (Benjamin A. Miller, Oleg Marshalenko, and Timur
 * Asanov) and licensed only under valid, executed license agreements
 * between Firejack Technologies and its customers. Modification and / or
 * re-distribution of this source code is allowed only within the terms
 * of an executed license agreement.
 *
 * Any modification of this code voids any and all warranties and indemnifications
 * for the component in question and may interfere with upgrade path. Firejack Technologies
 * encourages you to extend the core framework and / or request modifications. You may
 * also submit and assign contributions to Firejack Technologies for consideration
 * as improvements or inclusions to the platform to restore modification
 * warranties and indemnifications upon official re-distributed in patch or release form.
 */

Ext.define('OPF.console.domain.model.FieldModel', {
    extend: 'Ext.data.Model',

    statics: {
        pageSuffixUrl: 'console/domain',
        restSuffixUrl: 'registry/package',
        constraintName: 'OPF.registry.Field',

        fieldTypeIsString: function(value) {
            return 'UNIQUE_ID' == value || 'CODE' == value || 'LABEL' == value ||
                'LOOKUP' == value || 'NAME' == value || 'DESCRIPTION' == value ||
                'PASSWORD' == value || 'SECRET_KEY' == value || 'TINY_TEXT' == value ||
                'SHORT_TEXT' == value || 'MEDIUM_TEXT' == value || 'LONG_TEXT' == value ||
                'UNLIMITED_TEXT' == value || 'RICH_TEXT' == value || 'URL' == value ||
                'SSN' == value || 'PHONE_NUMBER' == value ||
                'FILE' == value || 'IMAGE_FILE' == value || 'AUDIO_FILE' == value ||
                'VIDEO_FILE' == value;
        },

        fieldTypeIsNumeric: function(value) {
            return 'NUMERIC_ID' == value || 'LARGE_NUMBER' == value ||
                'INTEGER_NUMBER' == value || 'CURRENCY' == value;
        },

        fieldTypeIsReal: function(value) {
            return 'DECIMAL_NUMBER' == value || 'CURRENCY' == value;
        },

        fieldTypeIsDate: function(value) {
            return 'DATE' == value || 'TIME' == value || 'EVENT_TIME' == value ||
                'CREATION_TIME' == value || 'UPDATE_TIME' == value;
        },

        fieldTypeIsBoolean: function(value) {
            return 'FLAG' == value;
        },

        checkType: function(value, type) {
            var validValue = null;
            if (OPF.isNotBlank(value)) {
                if (OPF.console.domain.model.FieldModel.fieldTypeIsNumeric(type)) {
                    validValue = Ext.isNumeric(value) ? parseInt(value) : null;
                } else if (OPF.console.domain.model.FieldModel.fieldTypeIsReal(type)) {
                    validValue = isFinite(value) ? value : null;
                } else if (OPF.console.domain.model.FieldModel.fieldTypeIsDate(type)) {
                    validValue = Ext.isDate(value) ? Ext.Date.parse(value) : null;
                } else if (OPF.console.domain.model.FieldModel.fieldTypeIsBoolean(type)) {
                    value = value.toLowerCase();
                    validValue = value == 'true';
                } else {
                    validValue = value;
                }
            }
            return validValue;
        }
    },

    fields: [
        { name: 'id', type: 'int', useNull: true },
        { name: 'inherited', type: 'boolean' },
        { name: 'autoGenerated', type: 'boolean' },
        { name: 'name', type: 'string' },
        { name: 'displayName', type: 'string' },
        { name: 'displayDescription', type: 'string' },
        { name: 'fieldType', type: 'string' },
        { name: 'fieldTypeName', type: 'string' },
        { name: 'customFieldType', type: 'string' },
        { name: 'required', type: 'boolean' },
        { name: 'searchable', type: 'boolean' },
        { name: 'defaultValue', type: 'string', useNull: true },
        { name: 'description', type: 'string', useNull: true },
        { name: 'allowedValues', useNull: true },

        { name: 'parentId', type: 'int' },

        { name: 'created', type: 'int' },
        { name: 'canUpdate', type: 'boolean'},
        { name: 'canDelete', type: 'boolean'}
    ],

    associations: [
        { type: 'belongsTo', model: 'OPF.console.directory.model.Directory', primaryKey: 'id', foreignKey: 'parentId' }
    ]

});