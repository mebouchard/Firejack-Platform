; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Open Flame"
#define MyAppVersion "1.5"
#define MyAppPublisher " Firejack Technologies"
#define MyAppURL "http://web.firejack.net/"
#define MyAppExeName "startup.bat"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{57B38134-AB7C-4D6A-B98F-B336932C04F6}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\Openflame
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
OutputDir=C:\Other\Install
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes
ArchitecturesAllowed=x64
ArchitecturesInstallIn64BitMode=x64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "C:\Other\Install\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\startup"; Filename: "{app}\startup.bat"; WorkingDir: "{app}"
Name: "{group}\shutdown"; Filename: "{app}\shutdown.bat"; WorkingDir: "{app}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall skipifsilent

[Code]
Var
	Page: TWizardPage;
    ComboBox: TNewComboBox;
	MasterPanel: TPanel;
	SlavePanel:TPanel;

	SystemEdit: TEdit;
	SystemPortEdit: TEdit;
	ServerHostEdit: TEdit;
	UsernameEdit: TEdit;
	EmailEdit: TEdit;
	PasswordEdit: TPasswordEdit;
	ConfirmEdit: TPasswordEdit;

	SlaveURLEdit: TEdit;
	SlavePortEdit: TEdit;
	SlaveUsernameEdit: TEdit;
	SlavePasswordEdit: TPasswordEdit;
	SlaveConfirmEdit: TPasswordEdit;
{MySQL}
  MySql: TNewComboBox;
 	MInstallPanel: TPanel;
	MLocalPanel:TPanel;

	MIPasswordEdit: TPasswordEdit;
	MIConfirmEdit: TPasswordEdit;

  MLHostEdit: TEdit;
  MLPortEdit: TEdit;
	MLPasswordEdit: TPasswordEdit;
	MLConfirmEdit: TPasswordEdit;

procedure ComboOnChange(Sender: TObject);
begin
  if ComboBox.ItemIndex = 0 then
    begin
		MasterPanel.Visible := True;
		SlavePanel.Visible := False;

		SlaveURLEdit.Text := '';
		SlavePortEdit.Text := '';
		SlaveUsernameEdit.Text := '';
		SlavePasswordEdit.Text := '';
		SlaveConfirmEdit.Text := '';
	end
  else
    begin
   	    MasterPanel.Visible := False;
   	    SlavePanel.Visible := True;

        SystemEdit.Text := '';
        SystemPortEdit.Text := '';
        ServerHostEdit.Text := '';
        UsernameEdit.Text := '';
        EmailEdit.Text := '';
        PasswordEdit.Text := '';
        ConfirmEdit.Text := '';
   	end
end;

procedure MySQLOnChange(Sender: TObject);
begin
  if MySql.ItemIndex = 0 then
    begin
		MInstallPanel.Visible := True;
		MLocalPanel.Visible := False;

		MIPasswordEdit.Text := '';
		MIConfirmEdit.Text := '';
	end
  else
    begin
   	    MInstallPanel.Visible := False;
   	    MLocalPanel.Visible := True;
   	end
end;

procedure EditOnChange(Sender: TObject);
begin
  if ComboBox.ItemIndex = 0 then
    begin
      Wizardform.NextButton.Enabled := 
      not(SystemEdit.Text = '') and 
      not(SystemPortEdit.Text = '') and 
      not(ServerHostEdit.Text = '') and 
      not(UsernameEdit.Text = '') and 
      not(EmailEdit.Text = '') and 
      not(PasswordEdit.Text = '') and 
      not(ConfirmEdit.Text = '') and
      (PasswordEdit.Text = ConfirmEdit.Text);
      
      if not(ConfirmEdit.Text ='') and not(PasswordEdit.Text = ConfirmEdit.Text) then
        ConfirmEdit.Color := clRed
      else
        ConfirmEdit.Color := clWhite;
    end
  else
    begin
      Wizardform.NextButton.Enabled := 
      not(SlaveURLEdit.Text = '') and 
      not(SlavePortEdit.Text = '') and 
      not(SlaveUsernameEdit.Text = '') and 
      not(SlavePasswordEdit.Text = '') and 
      not(SlaveConfirmEdit.Text = '') and
      (SlavePasswordEdit.Text = SlaveConfirmEdit.Text);

      if not(SlaveConfirmEdit.Text ='') and not(SlavePasswordEdit.Text = SlaveConfirmEdit.Text) then
        SlaveConfirmEdit.Color := clRed
      else
        SlaveConfirmEdit.Color := clWhite;
   	end
end;

procedure InitMasterPanel();
var
	SystemLable: TLabel;
	SystemPortLable: TLabel;
	ServerHostLable: TLabel;
	UsernameLable: TLabel;
	EmailLable: TLabel;
	PasswordLable: TLabel;
	ConfirmLable: TLabel;
begin
	MasterPanel := TPanel.Create(Page);
	MasterPanel.Top := ScaleY(35);
	MasterPanel.Left := ScaleX(10);
	MasterPanel.Width := ScaleX(400);
	MasterPanel.Height := ScaleY(200);
	MasterPanel.ParentBackground := False;
	MasterPanel.Parent := Page.Surface;

	SystemLable := TLabel.Create(Page);
	SystemLable.Parent := MasterPanel;
	SystemLable.Caption := 'System Host :';
	SystemLable.Top :=  ScaleY(8);
	SystemLable.Left := ScaleX(0);
	SystemLable.Width := ScaleX(70);

  SystemEdit := TNewEdit.Create(Page);
	SystemEdit.Top := ScaleY(5);
	SystemEdit.Left := ScaleX(75);
	SystemEdit.Width := ScaleX(100);
  SystemEdit.Parent := MasterPanel;
  SystemEdit.OnChange := @EditOnChange;

	SystemPortLable := TLabel.Create(Page);
	SystemPortLable.Parent := MasterPanel;
	SystemPortLable.Caption := 'System Port :';
	SystemPortLable.Top :=  ScaleY(8);
	SystemPortLable.Left := ScaleX(180);
	SystemPortLable.Width := ScaleX(70);

  SystemPortEdit := TNewEdit.Create(Page);
	SystemPortEdit.Top := ScaleY(5);
	SystemPortEdit.Left := ScaleX(255);
	SystemPortEdit.Width := ScaleX(100);
  SystemPortEdit.Parent := MasterPanel;
  SystemPortEdit.OnChange := @EditOnChange;

    ServerHostLable := TLabel.Create(Page);
    ServerHostLable.Parent := MasterPanel;
    ServerHostLable.Caption := 'Server Host :';
    ServerHostLable.Top :=  ScaleY(33);
    ServerHostLable.Left := ScaleX(0);
    ServerHostLable.Width := ScaleX(70);

    ServerHostEdit := TNewEdit.Create(Page);
    ServerHostEdit.Top := ScaleY(30);
    ServerHostEdit.Left := ScaleX(75);
    ServerHostEdit.Width := ScaleX(100);
    ServerHostEdit.Parent := MasterPanel;
    ServerHostEdit.OnChange := @EditOnChange;

    UsernameLable := TLabel.Create(Page);
    UsernameLable.Parent := MasterPanel;
    UsernameLable.Caption := 'Username :';
    UsernameLable.Top :=  ScaleY(58);
    UsernameLable.Left := ScaleX(0);
    UsernameLable.Width := ScaleX(70);

    UsernameEdit := TNewEdit.Create(Page);
    UsernameEdit.Top := ScaleY(55);
    UsernameEdit.Left := ScaleX(75);
    UsernameEdit.Width := ScaleX(100);
    UsernameEdit.Parent := MasterPanel;
    UsernameEdit.OnChange := @EditOnChange;

    EmailLable := TLabel.Create(Page);
    EmailLable.Parent := MasterPanel;
    EmailLable.Caption := 'Email :';
    EmailLable.Top :=  ScaleY(83);
    EmailLable.Left := ScaleX(0);
    EmailLable.Width := ScaleX(70);

    EmailEdit := TNewEdit.Create(Page);
    EmailEdit.Top := ScaleY(80);
    EmailEdit.Left := ScaleX(75);
    EmailEdit.Width := ScaleX(100);
    EmailEdit.Parent := MasterPanel;
    EmailEdit.OnChange := @EditOnChange;

    PasswordLable := TLabel.Create(Page);
    PasswordLable.Parent := MasterPanel;
    PasswordLable.Caption := 'Password :';
    PasswordLable.Top :=  ScaleY(108);
    PasswordLable.Left := ScaleX(0);
    PasswordLable.Width := ScaleX(70);

    PasswordEdit := TPasswordEdit.Create(Page);
    PasswordEdit.Top := ScaleY(105);
    PasswordEdit.Left := ScaleX(75);
    PasswordEdit.Width := ScaleX(100);
    PasswordEdit.Parent := MasterPanel;
    PasswordEdit.OnChange := @EditOnChange;

    ConfirmLable := TLabel.Create(Page);
    ConfirmLable.Parent := MasterPanel;
    ConfirmLable.Caption := 'Confirm :';
    ConfirmLable.Top :=  ScaleY(133);
    ConfirmLable.Left := ScaleX(0);
    ConfirmLable.Width := ScaleX(70);

    ConfirmEdit := TPasswordEdit.Create(Page);
    ConfirmEdit.Top := ScaleY(130);
    ConfirmEdit.Left := ScaleX(75);
    ConfirmEdit.Width := ScaleX(100);
    ConfirmEdit.Parent := MasterPanel;
    ConfirmEdit.OnChange := @EditOnChange;
end;

procedure InitSlavePanel();
var
	SystemLable: TLabel;
	SystemPortLable: TLabel;
	UsernameLable: TLabel;
	PasswordLable: TLabel;
	ConfirmLable: TLabel;
begin
    SlavePanel := TPanel.Create(Page);
    SlavePanel.Top := ScaleY(35);
    SlavePanel.Left := ScaleX(10);
    SlavePanel.Width := ScaleX(400);
    SlavePanel.Height := ScaleY(200);
    SlavePanel.ParentBackground := False;
    SlavePanel.Parent := Page.Surface;
    SlavePanel.Visible  := False;

    SystemLable := TLabel.Create(Page);
    SystemLable.Parent := SlavePanel;
    SystemLable.Caption := 'System Host :';
    SystemLable.Top :=  ScaleY(8);
    SystemLable.Left := ScaleX(0);
    SystemLable.Width := ScaleX(70);

    SlaveURLEdit := TNewEdit.Create(Page);
    SlaveURLEdit.Top := ScaleY(5);
    SlaveURLEdit.Left := ScaleX(75);
    SlaveURLEdit.Width := ScaleX(100);
    SlaveURLEdit.Parent := SlavePanel;
    SlaveURLEdit.OnChange := @EditOnChange;

    SystemPortLable := TLabel.Create(Page);
    SystemPortLable.Parent := SlavePanel;
    SystemPortLable.Caption := 'System Port :';
    SystemPortLable.Top :=  ScaleY(8);
    SystemPortLable.Left := ScaleX(180);
    SystemPortLable.Width := ScaleX(70);

    SlavePortEdit := TNewEdit.Create(Page);
    SlavePortEdit.Top := ScaleY(5);
    SlavePortEdit.Left := ScaleX(255);
    SlavePortEdit.Width := ScaleX(100);
    SlavePortEdit.Parent := SlavePanel;
    SlavePortEdit.OnChange := @EditOnChange;

    UsernameLable := TLabel.Create(Page);
    UsernameLable.Parent := SlavePanel;
    UsernameLable.Caption := 'Username :';
    UsernameLable.Top :=  ScaleY(33);
    UsernameLable.Left := ScaleX(0);
    UsernameLable.Width := ScaleX(70);

    SlaveUsernameEdit := TNewEdit.Create(Page);
    SlaveUsernameEdit.Top := ScaleY(30);
    SlaveUsernameEdit.Left := ScaleX(75);
    SlaveUsernameEdit.Width := ScaleX(100);
    SlaveUsernameEdit.Parent := SlavePanel;
    SlaveUsernameEdit.OnChange := @EditOnChange;

    PasswordLable := TLabel.Create(Page);
    PasswordLable.Parent := SlavePanel;
    PasswordLable.Caption := 'Password :';
    PasswordLable.Top :=  ScaleY(58);
    PasswordLable.Left := ScaleX(0);
    PasswordLable.Width := ScaleX(70);

    SlavePasswordEdit := TPasswordEdit.Create(Page);
    SlavePasswordEdit.Top := ScaleY(55);
    SlavePasswordEdit.Left := ScaleX(75);
    SlavePasswordEdit.Width := ScaleX(100);
    SlavePasswordEdit.Parent := SlavePanel;
    SlavePasswordEdit.OnChange := @EditOnChange;

    ConfirmLable := TLabel.Create(Page);
    ConfirmLable.Parent := SlavePanel;
    ConfirmLable.Caption := 'Confirm :';
    ConfirmLable.Top :=  ScaleY(83);
    ConfirmLable.Left := ScaleX(0);
    ConfirmLable.Width := ScaleX(70);

    SlaveConfirmEdit := TPasswordEdit.Create(Page);
    SlaveConfirmEdit.Top := ScaleY(80);
    SlaveConfirmEdit.Left := ScaleX(75);
    SlaveConfirmEdit.Width := ScaleX(100);
    SlaveConfirmEdit.Parent := SlavePanel;
    SlaveConfirmEdit.OnChange := @EditOnChange;
end;

procedure writeAndExec();
var
  ResultCode: Integer;
  env:String;
  prop:String;
begin
  if ComboBox.ItemIndex = 0 then
    begin
		env := '<?xml version='+#34+'1.0'+#34+' encoding='+#34+'UTF-8'+#34+'?>'+#13#10+
		'<environments>'+#13#10+
		'    <environment>'+#13#10+
		'        <system name='+#34+'opf-local'+#34+' path='+#34+'net.firejack'+#34+'>'+#13#10+
		'            <packages>'+#13#10+
		'                <package>net.firejack.openflame</package>'+#13#10+
		'            </packages>'+#13#10+
		'            <port>'+SystemPortEdit.Text+'</port>'+#13#10+
		'            <protocol>HTTP</protocol>'+#13#10+
		'            <serverName>'+SystemEdit.Text+'</serverName>'+#13#10+
		'        </system>'+#13#10+
		'        <databases>'+#13#10+
		'            <database name='+#34+'db'+#34+' path='+#34+'net.firejack.opf-local'+#34+'>'+#13#10+
		'                <password>openflame</password>'+#13#10+
		'                <port>3307</port>'+#13#10+
		'                <rdbms>MySQL</rdbms>'+#13#10+
		'                <protocol>JDBC</protocol>'+#13#10+
		'                <serverName>localhost</serverName>'+#13#10+
		'                <urlPath>opf_main</urlPath>'+#13#10+
		'                <username>root</username>'+#13#10+
		'            </database>'+#13#10+
		'        </databases>'+#13#10+
		'        <servers>'+#13#10+
		'            <server name='+#34+'server'+#34+' path='+#34+'net.firejack.opf-local'+#34+'>'+#13#10+
		'                <port>8080</port>'+#13#10+
		'                <protocol>HTTP</protocol>'+#13#10+
		'                <serverName>'+ServerHostEdit.Text+'</serverName>'+#13#10+
		'            </server>'+#13#10+
		'        </servers>'+#13#10+
		'        <filestores>'+#13#10+
		'            <filestore name='+#34+'base'+#34+' path='+#34+'net.firejack.opf-local'+#34+'>'+#13#10+
		'                <port>8080</port>'+#13#10+
		'                <serverDirectory>'+ExpandConstant('{app}')+'\base\filestore</serverDirectory>'+#13#10+
		'                <serverName>'+ServerHostEdit.Text+'</serverName>'+#13#10+
		'            </filestore>'+#13#10+
		'            <filestore name='+#34+'config'+#34+' path='+#34+'net.firejack.opf-local'+#34+'>'+#13#10+
		'                <port>8080</port>'+#13#10+
		'                <serverDirectory>'+ExpandConstant('{app}')+'\base\filestore</serverDirectory>'+#13#10+
		'                <serverName>'+ServerHostEdit.Text+'</serverName>'+#13#10+
		'            </filestore>'+#13#10+
		'            <filestore name='+#34+'content'+#34+' path='+#34+'net.firejack.opf-local'+#34+'>'+#13#10+
		'                <port>8080</port>'+#13#10+
		'                <serverDirectory>'+ExpandConstant('{app}')+'\base\filestore</serverDirectory>'+#13#10+
		'                <serverName>'+ServerHostEdit.Text+'</serverName>'+#13#10+
		'            </filestore>'+#13#10+
		'        </filestores>'+#13#10+
		'        <directories>'+#13#10+
		'            <directory name='+#34+'accounts'+#34+' path='+#34+'net.firejack.opf-local'+#34+'>'+#13#10+
		'                <directoryType>DATABASE</directoryType>'+#13#10+
		'                <serverName>'+ServerHostEdit.Text+'</serverName>'+#13#10+
		'                <status>ACTIVE</status>'+#13#10+
		'                <urlPath>/openflame</urlPath>'+#13#10+
		'            </directory>'+#13#10+
		'        </directories>'+#13#10+
		'    </environment>'+#13#10+
		'</environments>'+#13#10;

        SaveStringToFile(ExpandConstant('{app}')+'\base\environment.xml', env, False);

         prop :=
        'app.admin.email='+EmailEdit.Text+#13#10+
        'app.admin.name='+UsernameEdit.Text+#13#10+
        'app.admin.password='+PasswordEdit.Text+#13#10+

        '#Memcached'+#13#10+
        'memcached.url='+ServerHostEdit.Text+#13#10+
        'memcached.port=11222'+#13#10;

        SaveStringToFile(ExpandConstant('{app}')+'\base\environment.properties', prop, False);
	end
 else
  begin
      prop :=
      'opf.master.url=http://'+SlaveURLEdit.Text+':'+SlavePortEdit.Text+'/openflame'+#13#10+
      'app.admin.name='+SlaveUsernameEdit.Text+#13#10+
      'app.admin.password='+SlavePasswordEdit.Text+#13#10+

      '#Memcached'+#13#10+
      'memcached.url='+SlaveURLEdit.Text+#13#10+
      'memcached.port=11222'+#13#10;

      SaveStringToFile(ExpandConstant('{app}')+'\base\environment.properties', prop, False);
  end
end;

procedure InitializeWizard();
var 
 TypeLable: TLabel;
begin
	Page := CreateCustomPage(wpSelectDir, 'Settings', 'Configuration Settings');

	TypeLable := TLabel.Create(Page);
	TypeLable.Parent := Page.Surface;
	TypeLable.Caption := 'Type :';
	TypeLable.Left := ScaleX(10);
	TypeLable.Top :=  ScaleY(14);
	TypeLable.Width := ScaleX(50);
	TypeLable.Height := ScaleY(15);

	ComboBox := TNewComboBox.Create(Page);
	ComboBox.Left := ScaleX(50);
	ComboBox.Top :=  ScaleY(10);
	ComboBox.Width := ScaleX(200);
	ComboBox.Height := ScaleY(15);
	ComboBox.Parent := Page.Surface;
	ComboBox.Style := csDropDownList;
	ComboBox.Items.Add('Openflame Master');
	ComboBox.Items.Add('Openflame Slave');
	ComboBox.ItemIndex := 0;
	ComboBox.OnChange := @ComboOnChange;

	InitMasterPanel();
	InitSlavePanel();
  
 	{Page := CreateCustomPage(Page.ID, 'MySQL', 'MySQL Settings');

	TypeLable := TLabel.Create(Page);
	TypeLable.Parent := Page.Surface;
	TypeLable.Caption := 'Type :';
	TypeLable.Left := ScaleX(10);
	TypeLable.Top :=  ScaleY(14);
	TypeLable.Width := ScaleX(50);
	TypeLable.Height := ScaleY(15);

	MySql := TNewComboBox.Create(Page);
	MySql.Left := ScaleX(50);
	MySql.Top :=  ScaleY(10);
	MySql.Width := ScaleX(200);
	MySql.Height := ScaleY(15);
	MySql.Parent := Page.Surface;
	MySql.Style := csDropDownList;
	MySql.Items.Add('Install');
	MySql.Items.Add('Local');
	MySql.ItemIndex := 0;
	MySql.OnChange := @ComboOnChange;
     }

end;

procedure CurPageChanged(CurPageID: Integer);
begin
If CurPageID = Page.ID Then
  WizardForm.NextButton.Enabled := False;
if  CurPageID = 14  then
   writeAndExec();
end;
